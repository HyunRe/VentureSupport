// Generated by view binder compiler. Do not edit!
package com.example.venturesupport.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.venturesupport.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CheckinguserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView CheckingUserView;

  @NonNull
  public final Button checkButton;

  @NonNull
  public final EditText editTextTextEmailAddress;

  @NonNull
  public final EditText editTextTextPassword;

  @NonNull
  public final ImageView email;

  @NonNull
  public final ImageView password;

  private CheckinguserBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView CheckingUserView, @NonNull Button checkButton,
      @NonNull EditText editTextTextEmailAddress, @NonNull EditText editTextTextPassword,
      @NonNull ImageView email, @NonNull ImageView password) {
    this.rootView = rootView;
    this.CheckingUserView = CheckingUserView;
    this.checkButton = checkButton;
    this.editTextTextEmailAddress = editTextTextEmailAddress;
    this.editTextTextPassword = editTextTextPassword;
    this.email = email;
    this.password = password;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CheckinguserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CheckinguserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.checkinguser, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CheckinguserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CheckingUser_View;
      TextView CheckingUserView = ViewBindings.findChildViewById(rootView, id);
      if (CheckingUserView == null) {
        break missingId;
      }

      id = R.id.check_button;
      Button checkButton = ViewBindings.findChildViewById(rootView, id);
      if (checkButton == null) {
        break missingId;
      }

      id = R.id.editTextTextEmailAddress;
      EditText editTextTextEmailAddress = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextEmailAddress == null) {
        break missingId;
      }

      id = R.id.editTextTextPassword;
      EditText editTextTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPassword == null) {
        break missingId;
      }

      id = R.id.email;
      ImageView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.password;
      ImageView password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      return new CheckinguserBinding((ConstraintLayout) rootView, CheckingUserView, checkButton,
          editTextTextEmailAddress, editTextTextPassword, email, password);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
