// Generated by view binder compiler. Do not edit!
package com.example.venturesupport.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.venturesupport.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WarehouseRegistrationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView WarehouseView;

  @NonNull
  public final Button checkButton;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final EditText warehouseLocationEdit;

  @NonNull
  public final EditText warehouseNameEdit;

  private WarehouseRegistrationBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView WarehouseView, @NonNull Button checkButton, @NonNull TextView textView,
      @NonNull TextView textView3, @NonNull EditText warehouseLocationEdit,
      @NonNull EditText warehouseNameEdit) {
    this.rootView = rootView;
    this.WarehouseView = WarehouseView;
    this.checkButton = checkButton;
    this.textView = textView;
    this.textView3 = textView3;
    this.warehouseLocationEdit = warehouseLocationEdit;
    this.warehouseNameEdit = warehouseNameEdit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WarehouseRegistrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WarehouseRegistrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.warehouse_registration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WarehouseRegistrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Warehouse_View;
      TextView WarehouseView = ViewBindings.findChildViewById(rootView, id);
      if (WarehouseView == null) {
        break missingId;
      }

      id = R.id.check_button;
      Button checkButton = ViewBindings.findChildViewById(rootView, id);
      if (checkButton == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.warehouse_location_edit;
      EditText warehouseLocationEdit = ViewBindings.findChildViewById(rootView, id);
      if (warehouseLocationEdit == null) {
        break missingId;
      }

      id = R.id.warehouse_name_edit;
      EditText warehouseNameEdit = ViewBindings.findChildViewById(rootView, id);
      if (warehouseNameEdit == null) {
        break missingId;
      }

      return new WarehouseRegistrationBinding((ConstraintLayout) rootView, WarehouseView,
          checkButton, textView, textView3, warehouseLocationEdit, warehouseNameEdit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
