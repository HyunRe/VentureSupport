// Generated by view binder compiler. Do not edit!
package com.example.venturesupport.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.venturesupport.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WarehouseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView WarehouseView;

  @NonNull
  public final FloatingActionButton addWarehouseButton;

  @NonNull
  public final RecyclerView warehouseRecyclerView;

  private WarehouseBinding(@NonNull ConstraintLayout rootView, @NonNull TextView WarehouseView,
      @NonNull FloatingActionButton addWarehouseButton,
      @NonNull RecyclerView warehouseRecyclerView) {
    this.rootView = rootView;
    this.WarehouseView = WarehouseView;
    this.addWarehouseButton = addWarehouseButton;
    this.warehouseRecyclerView = warehouseRecyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WarehouseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WarehouseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.warehouse, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WarehouseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Warehouse_View;
      TextView WarehouseView = ViewBindings.findChildViewById(rootView, id);
      if (WarehouseView == null) {
        break missingId;
      }

      id = R.id.addWarehouse_button;
      FloatingActionButton addWarehouseButton = ViewBindings.findChildViewById(rootView, id);
      if (addWarehouseButton == null) {
        break missingId;
      }

      id = R.id.warehouse_recyclerView;
      RecyclerView warehouseRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (warehouseRecyclerView == null) {
        break missingId;
      }

      return new WarehouseBinding((ConstraintLayout) rootView, WarehouseView, addWarehouseButton,
          warehouseRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
