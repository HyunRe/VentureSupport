// Generated by view binder compiler. Do not edit!
package com.example.venturesupport.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.venturesupport.R;
import com.github.mikephil.charting.charts.PieChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExpensechartBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView ExpenseView;

  @NonNull
  public final TextView PaynameTextView;

  @NonNull
  public final Button dateButton;

  @NonNull
  public final RecyclerView expenseRecyclerView;

  @NonNull
  public final TextView expenseTextView;

  @NonNull
  public final TextView monthTextView;

  @NonNull
  public final TextView payLongTextView;

  @NonNull
  public final PieChart pieChart;

  private ExpensechartBinding(@NonNull ConstraintLayout rootView, @NonNull TextView ExpenseView,
      @NonNull TextView PaynameTextView, @NonNull Button dateButton,
      @NonNull RecyclerView expenseRecyclerView, @NonNull TextView expenseTextView,
      @NonNull TextView monthTextView, @NonNull TextView payLongTextView,
      @NonNull PieChart pieChart) {
    this.rootView = rootView;
    this.ExpenseView = ExpenseView;
    this.PaynameTextView = PaynameTextView;
    this.dateButton = dateButton;
    this.expenseRecyclerView = expenseRecyclerView;
    this.expenseTextView = expenseTextView;
    this.monthTextView = monthTextView;
    this.payLongTextView = payLongTextView;
    this.pieChart = pieChart;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ExpensechartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExpensechartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.expensechart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExpensechartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Expense_View;
      TextView ExpenseView = ViewBindings.findChildViewById(rootView, id);
      if (ExpenseView == null) {
        break missingId;
      }

      id = R.id.Payname_textView;
      TextView PaynameTextView = ViewBindings.findChildViewById(rootView, id);
      if (PaynameTextView == null) {
        break missingId;
      }

      id = R.id.date_button;
      Button dateButton = ViewBindings.findChildViewById(rootView, id);
      if (dateButton == null) {
        break missingId;
      }

      id = R.id.expense_recyclerView;
      RecyclerView expenseRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (expenseRecyclerView == null) {
        break missingId;
      }

      id = R.id.expense_textView;
      TextView expenseTextView = ViewBindings.findChildViewById(rootView, id);
      if (expenseTextView == null) {
        break missingId;
      }

      id = R.id.month_textView;
      TextView monthTextView = ViewBindings.findChildViewById(rootView, id);
      if (monthTextView == null) {
        break missingId;
      }

      id = R.id.pay_long_textView;
      TextView payLongTextView = ViewBindings.findChildViewById(rootView, id);
      if (payLongTextView == null) {
        break missingId;
      }

      id = R.id.pieChart;
      PieChart pieChart = ViewBindings.findChildViewById(rootView, id);
      if (pieChart == null) {
        break missingId;
      }

      return new ExpensechartBinding((ConstraintLayout) rootView, ExpenseView, PaynameTextView,
          dateButton, expenseRecyclerView, expenseTextView, monthTextView, payLongTextView,
          pieChart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
