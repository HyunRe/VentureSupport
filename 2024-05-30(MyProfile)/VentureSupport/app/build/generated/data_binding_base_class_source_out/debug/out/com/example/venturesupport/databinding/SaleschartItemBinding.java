// Generated by view binder compiler. Do not edit!
package com.example.venturesupport.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.venturesupport.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SaleschartItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView expenseAmount;

  @NonNull
  public final TextView expenseText;

  @NonNull
  public final TextView incomeAmount;

  @NonNull
  public final TextView incomeText;

  @NonNull
  public final TextView monthText;

  @NonNull
  public final TextView salesAmount;

  @NonNull
  public final TextView salesText;

  private SaleschartItemBinding(@NonNull ConstraintLayout rootView, @NonNull TextView expenseAmount,
      @NonNull TextView expenseText, @NonNull TextView incomeAmount, @NonNull TextView incomeText,
      @NonNull TextView monthText, @NonNull TextView salesAmount, @NonNull TextView salesText) {
    this.rootView = rootView;
    this.expenseAmount = expenseAmount;
    this.expenseText = expenseText;
    this.incomeAmount = incomeAmount;
    this.incomeText = incomeText;
    this.monthText = monthText;
    this.salesAmount = salesAmount;
    this.salesText = salesText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SaleschartItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SaleschartItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.saleschart_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SaleschartItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expense_amount;
      TextView expenseAmount = ViewBindings.findChildViewById(rootView, id);
      if (expenseAmount == null) {
        break missingId;
      }

      id = R.id.expense_text;
      TextView expenseText = ViewBindings.findChildViewById(rootView, id);
      if (expenseText == null) {
        break missingId;
      }

      id = R.id.income_amount;
      TextView incomeAmount = ViewBindings.findChildViewById(rootView, id);
      if (incomeAmount == null) {
        break missingId;
      }

      id = R.id.income_text;
      TextView incomeText = ViewBindings.findChildViewById(rootView, id);
      if (incomeText == null) {
        break missingId;
      }

      id = R.id.month_text;
      TextView monthText = ViewBindings.findChildViewById(rootView, id);
      if (monthText == null) {
        break missingId;
      }

      id = R.id.sales_amount;
      TextView salesAmount = ViewBindings.findChildViewById(rootView, id);
      if (salesAmount == null) {
        break missingId;
      }

      id = R.id.sales_text;
      TextView salesText = ViewBindings.findChildViewById(rootView, id);
      if (salesText == null) {
        break missingId;
      }

      return new SaleschartItemBinding((ConstraintLayout) rootView, expenseAmount, expenseText,
          incomeAmount, incomeText, monthText, salesAmount, salesText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
