// Generated by view binder compiler. Do not edit!
package com.example.venturesupport.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.venturesupport.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MyprofileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView ChartRecyclerView;

  @NonNull
  public final RecyclerView MyProfileRecyclerView;

  @NonNull
  public final TextView MyProfileView;

  @NonNull
  public final ImageButton PaymentButton;

  @NonNull
  public final ImageButton WarehouseButton;

  private MyprofileBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView ChartRecyclerView, @NonNull RecyclerView MyProfileRecyclerView,
      @NonNull TextView MyProfileView, @NonNull ImageButton PaymentButton,
      @NonNull ImageButton WarehouseButton) {
    this.rootView = rootView;
    this.ChartRecyclerView = ChartRecyclerView;
    this.MyProfileRecyclerView = MyProfileRecyclerView;
    this.MyProfileView = MyProfileView;
    this.PaymentButton = PaymentButton;
    this.WarehouseButton = WarehouseButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MyprofileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MyprofileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.myprofile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MyprofileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Chart_recyclerView;
      RecyclerView ChartRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (ChartRecyclerView == null) {
        break missingId;
      }

      id = R.id.MyProfile_recyclerView;
      RecyclerView MyProfileRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (MyProfileRecyclerView == null) {
        break missingId;
      }

      id = R.id.MyProfile_View;
      TextView MyProfileView = ViewBindings.findChildViewById(rootView, id);
      if (MyProfileView == null) {
        break missingId;
      }

      id = R.id.Payment_Button;
      ImageButton PaymentButton = ViewBindings.findChildViewById(rootView, id);
      if (PaymentButton == null) {
        break missingId;
      }

      id = R.id.Warehouse_Button;
      ImageButton WarehouseButton = ViewBindings.findChildViewById(rootView, id);
      if (WarehouseButton == null) {
        break missingId;
      }

      return new MyprofileBinding((ConstraintLayout) rootView, ChartRecyclerView,
          MyProfileRecyclerView, MyProfileView, PaymentButton, WarehouseButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
